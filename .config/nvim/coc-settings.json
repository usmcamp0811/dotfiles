{
    "codeLens.enable": true,
    "diagnostic.errorSign": "☠",
    "diagnostic.warningSign": "",
    "diagnostic.infoSign": "",
    "diagnostic.hintSign": "➤➤",
    // requires `CocInstall coc-diagnostic`
    "diagnostic-languageserver.filetypes": {
        "sh": "shellcheck"
    },
    "eslint.enable": false,
    "eslint.filetypes": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],
    "git.realtimeGutters": true,
    "git.changedSign.text": "~",
    "git.addedSign.text": "+",
    "git.removedSign.text": "_",
    "git.topRemovedSign.text": "‾",
    "git.changeRemovedSign.text": "≃",
    "suggest.noselect": true,
    "suggest.snippetIndicator": "✂",
    "languageserver": {
        "flow": {
            "command": "flow-language-server",
            "args": [
                "--stdio",
                "--try-flow-bin"
            ],
            "filetypes": [
                "javascript",
                "javascript.jsx"
            ],
            "initializationOptions": {},
            "settings": {},
            "rootPatterns": [
                ".flowconfig"
            ]
        },
// npm i -g bash-language-server
        "bash": {
            "command": "bash-language-server",
            "filetypes": [
                "sh"
            ],
            "args": [
                "start"
            ],
            "ignoredRootPaths": [
                "~"
            ]
        },
// npm install -g dockerfile-language-server-nodejs
        "dockerfile": {
            "command": "docker-langserver",
            "filetypes": [
                "dockerfile"
            ],
            "args": [
                "--stdio"
            ]
        },
        "rust": {
            "command": "rust-analyzer",
            "filetypes": [
                "rust"
            ],
            "rootPatterns": [
                "Cargo.toml"
            ]
        },
        "python": {
            "command": "python",
            "args": [
                "-mpyls",
                "-vv",
                "--log-file",
                "/tmp/lsp_python.log"
            ],
            "trace.server": "verbose",
            "filetypes": [
                "python"
            ],
            "settings": {
                "pyls": {
                    "enable": true,
                    "trace": {
                        "server": "verbose"
                    },
                    "commandPath": "",
                    "configurationSources": [
                        "pycodestyle"
                    ],
                    "plugins": {
                        "jedi_completion": {
                            "enabled": true
                        },
                        "jedi_hover": {
                            "enabled": true
                        },
                        "jedi_references": {
                            "enabled": true
                        },
                        "jedi_signature_help": {
                            "enabled": true
                        },
                        "jedi_symbols": {
                            "enabled": true,
                            "all_scopes": true
                        },
                        "mccabe": {
                            "enabled": true,
                            "threshold": 15
                        },
                        "preload": {
                            "enabled": true
                        },
                        "pycodestyle": {
                            "enabled": true
                        },
                        "pydocstyle": {
                            "enabled": false,
                            "match": "(?!test_).*\\.py",
                            "matchDir": "[^\\.].*"
                        },
                        "pyflakes": {
                            "enabled": true
                        },
                        "rope_completion": {
                            "enabled": true
                        },
                        "yapf": {
                            "enabled": true
                        }
                    }
                }
            }
        },
        "julia": {
            "command": "/usr/bin/julia",
            "args": [
                "--startup-file=no",
                "--history-file=no",
                "-e",
                "using LanguageServer;\n       using Pkg;\n       import StaticLint;\n       import SymbolServer;\n       env_path = dirname(Pkg.Types.Context().env.project_file);\n       debug = false;\n       server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\");\n       server.runlinter = true;\n       run(server);"
            ],
            "filetypes": [
                "julia"
            ]
        },
        "sql": {
            "command": "sql-language-server",
            "args": [
                "up",
                "--method",
                "stdio"
            ],
            "filetypes": [
                "sql",
                "mysql"
            ]
        }
    },
    "list.insertMappings": {
        "<C-x>": "action:split",
        "<C-v>": "action:vsplit"
    },
    "list.normalMappings": {
        "s": "action:split",
        "v": "action:vsplit"
    },
    "todolist.autoUpload": false,
    // required `CocInstall coc-texlab`
    // requires `pacman -S texlab`
    "latex.path": "/usr/bin/texlab",
    "latex.build.executable": "/usr/bin/latexmk",
    "latex.build.onSave": true,
    "latex.forwardSearch.executable": "zathura",
    "latex.build.args": [
        "-pdf",
        "-interaction=nonstopmode",
        "-synctex=1",
        "-pv"
    ],
    "latex.forwardSearch.args": [
        "--unique",
        "file:%p#src:%l%f"
    ],
    // required `pip install pylint`
    "python.linting.enabled": true,
    "python.linting.lintOnSave": true,
    "python.linting.pep8Enabled": false,
    "pyright.typeCheckingMode": "basic",
    // requires `CocInstall coc-lists`
    "list.source.files.command": "fd",
    "list.source.files.args": [
        "--type",
        "f"
    ],
    // requires `CocInstall coc-rls`
    "rust.clippy_preference": "on",
    // requires `CocInstall coc-tsserver`
    "tsserver.npm": "/usr/bin/npm",
    "tsserver.enableJavascript": true,
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
    "typescript.preferences.quoteStyle": "double",
    "typescript.referencesCodeLens.enable": false,
    "git.enableGutters": true,
    // requires `CocInstall coc-pairs`
    "pairs.enableBackspace": true,
    "explorer.width": 30,
    "explorer.icon.enableNerdfont": true,
    "explorer.file.showHiddenFiles": false,
    "explorer.previewAction.onHover": false,
    "explorer.keyMappings": {
        "i": false, // cancel default mapkey
        "k": "nodePrev",
        "j": "nodeNext",
        "gk": "expandablePrev",
        "gj": "expandableNext",
        "*": "toggleSelection",
        "<tab>": "actionMenu",
        "h": "collapse",
        "l": [
            "expandable?",
            "expand",
            "open"
        ],
        "J": [
            "toggleSelection",
            "nodeNext"
        ],
        "K": [
            "toggleSelection",
            "nodePrev"
        ],
        "gl": "expandRecursive",
        "gh": "collapseRecursive",
        "o": "expandOrCollapse",
        "<cr>": [
            "expandable?",
            "expand",
            "open"
        ],
        "v": "open:vsplit",
        "e": "open",
        "s": "open:split",
        "S": "open:split:plain",
        "E": "open:vsplit",
        "t": "open:tab",
        "<bs>": "gotoParent",
        "gp": "preview:labeling",
        "y": "copyFilepath",
        "Y": "copyFilename",
        "c": "copyFile",
        "x": "cutFile",
        "p": "pasteFile",
        "d": "delete",
        "D": "deleteForever",
        "a": "addFile",
        "A": "addDirectory",
        "r": "rename",
        ".": "toggleHidden",
        "R": "refresh",
        "?": "help",
        "q": "quit",
        "<esc>": "esc",
        "X": "systemExecute",
        "gd": "listDrive",
        "f": "search",
        "F": "searchRecursive",
        "gf": "gotoSource:file",
        "gb": "gotoSource:buffer",
        "[[": "sourcePrev",
        "]]": "sourceNext",
        "[d": "diagnosticPrev",
        "]d": "diagnosticNext",
        "[c": "gitPrev",
        "]c": "gitNext",
        "<<": "gitStage",
        ">>": "gitUnstage"
    }
}
